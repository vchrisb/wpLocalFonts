<?php
/*
Plugin Name: Local Fonts
Description: Plugin to host Fonts (Roboto, Lobster, Montserrat, Open Sans) locally and optionally add to Divi's font menu
Version: 1.0.18
Author: Christopher Banck
Author URI: https://banck.net
*/
/* Start Adding Functions Below this Line */

// Register Style
function LocalFonts_load_custom_font($fonts) {
  $local_fonts_options = get_option( 'local_fonts_option_name' );
  $custom_fonts = array();
  if (isset($local_fonts_options['roboto_0']) && $local_fonts_options['roboto_0'] === 'roboto_0') {
    wp_enqueue_style( 'LocalFontsPluginRoboto', plugin_dir_url( __FILE__ ) . 'assets/css/roboto.css' );
	if (isset($local_fonts_options['divi_0']) && $local_fonts_options['divi_0'] === 'divi_0') {
    // Add font to Divi's font menu
        $font = array('Roboto' => array(
                'styles'        => '100italic,300italic,400italic,700italic,900italic,100,300,400,700,900',
                'character_set' => 'latin',
                'type'          => 'sans-serif',
                'standard'      => 1
            ));
        $custom_fonts = array_merge($font,$custom_fonts);
	}
        
  }
  if (isset($local_fonts_options['robotocondensed_1']) && $local_fonts_options['robotocondensed_1'] === 'robotocondensed_1') {
    wp_enqueue_style( 'LocalFontsPluginRobotoCondensed', plugin_dir_url( __FILE__ ) . 'assets/css/robotocondensed.css' );
    if (isset($local_fonts_options['divi_0']) && $local_fonts_options['divi_0'] === 'divi_0') {
        // Add font to Divi's font menu
        $font = array('Roboto Condensed' => array(
                'styles'        => '300italic,400italic,700italic,300,400,700',
                'character_set' => 'latin',
                'type'          => 'sans-serif',
                'standard'      => 1
            ));
        $custom_fonts = array_merge($font,$custom_fonts);
    }
        
  }
  if (isset($local_fonts_options['lobster_2']) && $local_fonts_options['lobster_2'] === 'lobster_2') {
    wp_enqueue_style( 'LocalFontsPluginLobster', plugin_dir_url( __FILE__ ) . 'assets/css/lobster.css' );
    if (isset($local_fonts_options['divi_0']) && $local_fonts_options['divi_0'] === 'divi_0') {
        // Add font to Divi's font menu
        $font = array('Lobster' => array(
                'styles'        => '400',
                'character_set' => 'latin',
                'type'          => 'sans-serif',
                'standard'      => 1
            ));
        $custom_fonts = array_merge($font,$custom_fonts);
    }

  }
  if (isset($local_fonts_options['montserrat_3']) && $local_fonts_options['montserrat_3'] === 'montserrat_3') {
    wp_enqueue_style( 'LocalFontsPluginMontserrat', plugin_dir_url( __FILE__ ) . 'assets/css/montserrat.css' );
    if (isset($local_fonts_options['divi_0']) && $local_fonts_options['divi_0'] === 'divi_0') {
        // Add font to Divi's font menu
        $font = array('Montserrat' => array(
                'styles'        => '100italic,300italic,400italic,700italic,900italic,100,300,400,700,900',
                'character_set' => 'latin',
                'type'          => 'sans-serif',
                'standard'      => 1
            ));
        $custom_fonts = array_merge($font,$custom_fonts);
    }
        

  }
  if (isset($local_fonts_options['opensans_4']) && $local_fonts_options['opensans_4'] === 'opensans_4') {
    wp_enqueue_style( 'LocalFontsPluginOpenSans', plugin_dir_url( __FILE__ ) . 'assets/css/opensans.css' );
    if (isset($local_fonts_options['divi_0']) && $local_fonts_options['divi_0'] === 'divi_0') {
        // Add font to Divi's font menu
        $font = array('Open Sans' => array(
                'styles'        => '300italic,400italic,700italic,300,400,700',
                'character_set' => 'latin',
                'type'          => 'sans-serif',
                'standard'      => 1
            ));
        $custom_fonts = array_merge($font,$custom_fonts);
    }
        
  }
  return array_merge($custom_fonts,$fonts);
}

add_filter('et_websafe_fonts', 'LocalFonts_load_custom_font',10,2);



/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class LocalFonts {
	private $local_fonts_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'local_fonts_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'local_fonts_page_init' ) );
	}

	public function local_fonts_add_plugin_page() {
		add_options_page(
			'Local Fonts', // page_title
			'Local Fonts', // menu_title
			'manage_options', // capability
			'local-fonts', // menu_slug
			array( $this, 'local_fonts_create_admin_page' ) // function
		);
	}

	public function local_fonts_create_admin_page() {
		$this->local_fonts_options = get_option( 'local_fonts_option_name' ); ?>

		<div class="wrap">
			<h2>Local Fonts</h2>
			<p>Select which fonts should be loaded and added to Divi</p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'local_fonts_option_group' );
					do_settings_sections( 'local-fonts-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function local_fonts_page_init() {
		register_setting(
			'local_fonts_option_group', // option_group
			'local_fonts_option_name', // option_name
			array( $this, 'local_fonts_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'local_fonts_setting_section', // id
			'Settings', // title
			array( $this, 'local_fonts_section_info' ), // callback
			'local-fonts-admin' // page
		);

		add_settings_field(
			'divi_0', // id
			'Divi', // title
			array( $this, 'divi_0_callback' ), // callback
			'local-fonts-admin', // page
			'local_fonts_setting_section' // section
		);

		add_settings_section(
			'local_fonts_fonts_section', // id
			'Fonts', // title
			array( $this, 'local_fonts_section_info' ), // callback
			'local-fonts-admin' // page
		);

		add_settings_field(
			'roboto_0', // id
			'Roboto', // title
			array( $this, 'roboto_0_callback' ), // callback
			'local-fonts-admin', // page
			'local_fonts_fonts_section' // section
		);

		add_settings_field(
			'robotocondensed_1', // id
			'Roboto Condensed', // title
			array( $this, 'robotocondensed_1_callback' ), // callback
			'local-fonts-admin', // page
			'local_fonts_fonts_section' // section
		);

		add_settings_field(
			'lobster_2', // id
			'Lobster', // title
			array( $this, 'lobster_2_callback' ), // callback
			'local-fonts-admin', // page
			'local_fonts_fonts_section' // section
		);

		add_settings_field(
			'montserrat_3', // id
			'Montserrat', // title
			array( $this, 'montserrat_3_callback' ), // callback
			'local-fonts-admin', // page
			'local_fonts_fonts_section' // section
		);

		add_settings_field(
			'opensans_4', // id
			'Open Sans', // title
			array( $this, 'opensans_4_callback' ), // callback
			'local-fonts-admin', // page
			'local_fonts_fonts_section' // section
		);
	}

	public function local_fonts_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['divi_0'] ) ) {
			$sanitary_values['divi_0'] = $input['divi_0'];
		}

		if ( isset( $input['roboto_0'] ) ) {
			$sanitary_values['roboto_0'] = $input['roboto_0'];
		}

		if ( isset( $input['robotocondensed_1'] ) ) {
			$sanitary_values['robotocondensed_1'] = $input['robotocondensed_1'];
		}

		if ( isset( $input['lobster_2'] ) ) {
			$sanitary_values['lobster_2'] = $input['lobster_2'];
		}

        if ( isset( $input['montserrat_3'] ) ) {
			$sanitary_values['montserrat_3'] = $input['montserrat_3'];
		}

        if ( isset( $input['opensans_4'] ) ) {
			$sanitary_values['opensans_4'] = $input['opensans_4'];
		}
		return $sanitary_values;
	}

	public function local_fonts_section_info() {
		
	}

	public function divi_0_callback() {
		printf(
			'<input type="checkbox" name="local_fonts_option_name[divi_0]" id="divi_0" value="divi_0" %s> <label for="divi_0">Add fonts to Divi fonts menu</label>',
			( isset( $this->local_fonts_options['divi_0'] ) && $this->local_fonts_options['divi_0'] === 'divi_0' ) ? 'checked' : ''
		);
	}

	public function roboto_0_callback() {
		printf(
			'<input type="checkbox" name="local_fonts_option_name[roboto_0]" id="roboto_0" value="roboto_0" %s> <label for="roboto_0">Add Roboto with weights: 100italic, 300italic, 400italic, 700italic, 900italic, 100, 300, 400, 700, 900</label>',
			( isset( $this->local_fonts_options['roboto_0'] ) && $this->local_fonts_options['roboto_0'] === 'roboto_0' ) ? 'checked' : ''
		);
	}

	public function robotocondensed_1_callback() {
		printf(
			'<input type="checkbox" name="local_fonts_option_name[robotocondensed_1]" id="robotocondensed_1" value="robotocondensed_1" %s> <label for="robotocondensed_1">Add Roboto Condensed with weights: 300italic, 400italic, 700italic, 300, 400, 700</label>',
			( isset( $this->local_fonts_options['robotocondensed_1'] ) && $this->local_fonts_options['robotocondensed_1'] === 'robotocondensed_1' ) ? 'checked' : ''
		);
	}

	public function lobster_2_callback() {
		printf(
			'<input type="checkbox" name="local_fonts_option_name[lobster_2]" id="lobster_2" value="lobster_2" %s> <label for="lobster_2">Add Lobster with weights: 400</label>',
			( isset( $this->local_fonts_options['lobster_2'] ) && $this->local_fonts_options['lobster_2'] === 'lobster_2' ) ? 'checked' : ''
		);
	}

    public function montserrat_3_callback() {
		printf(
			'<input type="checkbox" name="local_fonts_option_name[montserrat_3]" id="montserrat_3" value="montserrat_3" %s> <label for="montserrat_3">Add Montserrat with weights: 100italic, 300italic, 400italic, 700italic, 900italic, 100, 300, 400, 700, 900</label>',
			( isset( $this->local_fonts_options['montserrat_3'] ) && $this->local_fonts_options['montserrat_3'] === 'montserrat_3' ) ? 'checked' : ''
		);
	}

    public function opensans_4_callback() {
		printf(
			'<input type="checkbox" name="local_fonts_option_name[opensans_4]" id="opensans_4" value="opensans_4" %s> <label for="opensans_4">Add Montserrat with weights: 300italic, 400italic, 700italic, 300, 400, 700</label>',
			( isset( $this->local_fonts_options['opensans_4'] ) && $this->local_fonts_options['opensans_4'] === 'opensans_4' ) ? 'checked' : ''
		);
	}
}
if ( is_admin() )
	$local_fonts = new LocalFonts();

?>